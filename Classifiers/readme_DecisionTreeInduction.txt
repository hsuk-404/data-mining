DecisionTreeInduction.java

Objective:
	Decision trees are supervised pattern classifiers that are designed to work with categorical (non-numeric) data. They can function well when there are missing data values or irrelevant attributes in the data set. Decision tree induction is the process of learning an appropriate decision tree for a particular problem based on labeled samples.
	Your program should have two components: training and application. In training mode, a data set with labeled samples will be presented to the program, and it will use those samples to generate a decision tree. In application mode, the program will use the decision tree generated by the training mode and use it to classify samples with unknown class assignment. You have to implement these two modes in one program.

Compilation:
	javac DecisionTreeInduction.java 

Execution:
	java DecisionTreeInduction -i <file_name> -P <percentage_value> -c <class_name>
		P => Percentage of samples to be used for training
		c => Class attribute is the target class for building the classifier
		i => Input arff file
	Example:
		java DecisionTreeInduction -i bcwdisc.arff -P 10 -c class

Output Files:
	output_Training<percentage_value><input_file_name>.dt 					=> Decision tree
	output_Accuracy<percentage_value><input_file_name>.txt					=> Confusion matrix and the accuracy of the classification
	output_Application<percentage_value><input_file_name>.arff 				=> File with the class labels for each input record, in the same order as the record in the input file with one more attribute @attribute dtClass real as the last attribute for the predicted class. 

Test File:
	test_dataset.arff is renamed from bcwdisc.arff
	The bcwdisc.arff file is a discretized version of a breast cancer database published by the University of Wisconsin Hospitals. The original data set was obtained from the University of California Irvine (UCI) machine learning repository (http://www.ics.uci.edu/~mlearn/MLRepository.html  